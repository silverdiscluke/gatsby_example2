{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js"],"names":["Image","data","useStaticQuery","fluid","placeholderImage","childImageSharp","query","IndexPage","title","style","maxWidth","marginBottom","allNodeArticle","edges","map","edge","to","node","path","alias","Date","created","width","relationships","field_image","localFile","dangerouslySetInnerHTML","__html","body","value","split","splice","join"],"mappings":"8MA+BeA,EAhBD,WACZ,IAAMC,EAAOC,yBAAe,cAY5B,OAAO,kBAAC,IAAD,CAAKC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,S,YCM9CG,GADEC,UAxBG,SAAC,GAAD,IAAEN,EAAF,EAAEA,KAAF,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKO,MAAM,SACX,wCACA,+DACA,4DACA,yBAAKC,MAAO,CAAEC,SAAS,QAAUC,aAAa,YAC5C,kBAAC,EAAD,OAECV,EAAKW,eAAeC,MAAMC,KAAI,SAAAC,GAAI,OAC/B,oCACI,4BAAI,kBAAC,OAAD,CAAMC,GAAKD,EAAKE,KAAKC,KAAKC,OAAUJ,EAAKE,KAAKT,QAClD,+BAAO,4BAAMY,KAAKL,EAAKE,KAAKI,WAC5B,yBAAKZ,MAAO,CAAEC,SAAS,QAAUC,aAAa,UAAYW,MAAM,SAC5D,kBAAC,IAAD,CAAanB,MAAQY,EAAKE,KAAKM,cAAcC,YAAYC,UAAUpB,gBAAgBF,SAEvF,yBAAKuB,wBAAyB,CAAEC,OAAQZ,EAAKE,KAAKW,KAAKC,MAAMC,MAAM,KAAKC,OAAO,EAAG,IAAIC,KAAK,KAAO,aAG5G,kBAAC,OAAD,CAAMhB,GAAG,YAAT,gBAlBF,IAkB0C,6BACxC,kBAAC,OAAD,CAAMA,GAAG,sBAAT,8BAKc","file":"component---src-pages-index-js-99cf27c9c486fdbf6dd6.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport GatsbyImage from \"gatsby-image\";\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>Hi Luke,</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n      <Image />\n  </div>\n      {data.allNodeArticle.edges.map(edge => (\n          <>\n              <h3><Link to={ edge.node.path.alias }>{ edge.node.title }</Link></h3>\n              <small><em>{ Date(edge.node.created) }</em></small>\n              <div style={{ maxWidth: `300px`, marginBottom: `1.45rem`, width: `100%` }}>\n                  <GatsbyImage fluid={ edge.node.relationships.field_image.localFile.childImageSharp.fluid } />\n              </div>\n              <div dangerouslySetInnerHTML={{ __html: edge.node.body.value.split(' ').splice(0, 50).join(' ') + '...' }}></div>\n          </>\n      ))}\n    <Link to=\"/page-2/\">Go to page 2</Link> <br />\n    <Link to=\"/using-typescript/\">Go to \"Using TypeScript\"</Link>\n  </Layout>\n)\n\nexport default IndexPage\nexport const query = graphql`\n  query {\n    allNodeArticle {\n      edges {\n        node {\n          title\n          id\n          path {\n          alias\n          }\n          body {\n            value\n          }\n          created\n          relationships {\n            field_image {\n              localFile {\n                childImageSharp {\n                  fluid(maxWidth: 400, quality: 100) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}